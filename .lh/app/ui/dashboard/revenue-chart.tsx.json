{
    "sourceFile": "app/ui/dashboard/revenue-chart.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1714720332449,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1714720341377,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,65 @@\n+import { generateYAxis } from '@/app/lib/utils';\n+import { CalendarIcon } from '@heroicons/react/24/outline';\n+import { lusitana } from '@/app/ui/fonts';\n+import { Revenue } from '@/app/lib/definitions';\n+\n+// This component is representational only.\n+// For data visualization UI, check out:\n+// https://www.tremor.so/\n+// https://www.chartjs.org/\n+// https://airbnb.io/visx/\n+\n+export default async function RevenueChart({\n+  revenue,\n+}: {\n+  revenue: Revenue[];\n+}) {\n+  const chartHeight = 350;\n+  // NOTE: comment in this code when you get to this point in the course\n+\n+  const { yAxisLabels, topLabel } = generateYAxis(revenue);\n+\n+  // if (!revenue || revenue.length === 0) {\n+  //   return <p className=\"mt-4 text-gray-400\">No data available.</p>;\n+  // }\n+\n+  return (\n+    <div className=\"w-full md:col-span-4\">\n+      <h2 className={`${lusitana.className} mb-4 text-xl md:text-2xl`}>\n+        Recent Revenue\n+      </h2>\n+      {/* NOTE: comment in this code when you get to this point in the course */}\n+\n+      <div className=\"rounded-xl bg-gray-50 p-4\">\n+        <div className=\"sm:grid-cols-13 mt-0 grid grid-cols-12 items-end gap-2 rounded-md bg-white p-4 md:gap-4\">\n+          <div\n+            className=\"mb-6 hidden flex-col justify-between text-sm text-gray-400 sm:flex\"\n+            style={{ height: `${chartHeight}px` }}\n+          >\n+            {yAxisLabels.map((label) => (\n+              <p key={label}>{label}</p>\n+            ))}\n+          </div>\n+\n+          {revenue.map((month) => (\n+            <div key={month.month} className=\"flex flex-col items-center gap-2\">\n+              <div\n+                className=\"w-full rounded-md bg-blue-300\"\n+                style={{\n+                  height: `${(chartHeight / topLabel) * month.revenue}px`,\n+                }}\n+              ></div>\n+              <p className=\"-rotate-90 text-sm text-gray-400 sm:rotate-0\">\n+                {month.month}\n+              </p>\n+            </div>\n+          ))}\n+        </div>\n+        <div className=\"flex items-center pb-2 pt-6\">\n+          <CalendarIcon className=\"h-5 w-5 text-gray-500\" />\n+          <h3 className=\"ml-2 text-sm text-gray-500 \">Last 12 months</h3>\n+        </div>\n+      </div>\n+    </div>\n+  );\n+}\n"
                },
                {
                    "date": 1714720351336,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,11 +18,11 @@\n   // NOTE: comment in this code when you get to this point in the course\n \n   const { yAxisLabels, topLabel } = generateYAxis(revenue);\n \n-  // if (!revenue || revenue.length === 0) {\n-  //   return <p className=\"mt-4 text-gray-400\">No data available.</p>;\n-  // }\n+  if (!revenue || revenue.length === 0) {\n+    return <p className=\"mt-4 text-gray-400\">No data available.</p>;\n+  }\n \n   return (\n     <div className=\"w-full md:col-span-4\">\n       <h2 className={`${lusitana.className} mb-4 text-xl md:text-2xl`}>\n@@ -62,69 +62,4 @@\n       </div>\n     </div>\n   );\n }\n-import { generateYAxis } from '@/app/lib/utils';\n-import { CalendarIcon } from '@heroicons/react/24/outline';\n-import { lusitana } from '@/app/ui/fonts';\n-import { Revenue } from '@/app/lib/definitions';\n-\n-// This component is representational only.\n-// For data visualization UI, check out:\n-// https://www.tremor.so/\n-// https://www.chartjs.org/\n-// https://airbnb.io/visx/\n-\n-export default async function RevenueChart({\n-  revenue,\n-}: {\n-  revenue: Revenue[];\n-}) {\n-  const chartHeight = 350;\n-  // NOTE: comment in this code when you get to this point in the course\n-\n-  // const { yAxisLabels, topLabel } = generateYAxis(revenue);\n-\n-  // if (!revenue || revenue.length === 0) {\n-  //   return <p className=\"mt-4 text-gray-400\">No data available.</p>;\n-  // }\n-\n-  return (\n-    <div className=\"w-full md:col-span-4\">\n-      <h2 className={`${lusitana.className} mb-4 text-xl md:text-2xl`}>\n-        Recent Revenue\n-      </h2>\n-      {/* NOTE: comment in this code when you get to this point in the course */}\n-\n-      <div className=\"rounded-xl bg-gray-50 p-4\">\n-        <div className=\"sm:grid-cols-13 mt-0 grid grid-cols-12 items-end gap-2 rounded-md bg-white p-4 md:gap-4\">\n-          <div\n-            className=\"mb-6 hidden flex-col justify-between text-sm text-gray-400 sm:flex\"\n-            style={{ height: `${chartHeight}px` }}\n-          >\n-            {yAxisLabels.map((label) => (\n-              <p key={label}>{label}</p>\n-            ))}\n-          </div>\n-\n-          {revenue.map((month) => (\n-            <div key={month.month} className=\"flex flex-col items-center gap-2\">\n-              <div\n-                className=\"w-full rounded-md bg-blue-300\"\n-                style={{\n-                  height: `${(chartHeight / topLabel) * month.revenue}px`,\n-                }}\n-              ></div>\n-              <p className=\"-rotate-90 text-sm text-gray-400 sm:rotate-0\">\n-                {month.month}\n-              </p>\n-            </div>\n-          ))}\n-        </div>\n-        <div className=\"flex items-center pb-2 pt-6\">\n-          <CalendarIcon className=\"h-5 w-5 text-gray-500\" />\n-          <h3 className=\"ml-2 text-sm text-gray-500 \">Last 12 months</h3>\n-        </div>\n-      </div>\n-    </div>\n-  );\n-}\n"
                }
            ],
            "date": 1714720332449,
            "name": "Commit-0",
            "content": "import { generateYAxis } from '@/app/lib/utils';\nimport { CalendarIcon } from '@heroicons/react/24/outline';\nimport { lusitana } from '@/app/ui/fonts';\nimport { Revenue } from '@/app/lib/definitions';\n\n// This component is representational only.\n// For data visualization UI, check out:\n// https://www.tremor.so/\n// https://www.chartjs.org/\n// https://airbnb.io/visx/\n\nexport default async function RevenueChart({\n  revenue,\n}: {\n  revenue: Revenue[];\n}) {\n  const chartHeight = 350;\n  // NOTE: comment in this code when you get to this point in the course\n\n  // const { yAxisLabels, topLabel } = generateYAxis(revenue);\n\n  // if (!revenue || revenue.length === 0) {\n  //   return <p className=\"mt-4 text-gray-400\">No data available.</p>;\n  // }\n\n  return (\n    <div className=\"w-full md:col-span-4\">\n      <h2 className={`${lusitana.className} mb-4 text-xl md:text-2xl`}>\n        Recent Revenue\n      </h2>\n      {/* NOTE: comment in this code when you get to this point in the course */}\n\n      <div className=\"rounded-xl bg-gray-50 p-4\">\n        <div className=\"sm:grid-cols-13 mt-0 grid grid-cols-12 items-end gap-2 rounded-md bg-white p-4 md:gap-4\">\n          <div\n            className=\"mb-6 hidden flex-col justify-between text-sm text-gray-400 sm:flex\"\n            style={{ height: `${chartHeight}px` }}\n          >\n            {yAxisLabels.map((label) => (\n              <p key={label}>{label}</p>\n            ))}\n          </div>\n\n          {revenue.map((month) => (\n            <div key={month.month} className=\"flex flex-col items-center gap-2\">\n              <div\n                className=\"w-full rounded-md bg-blue-300\"\n                style={{\n                  height: `${(chartHeight / topLabel) * month.revenue}px`,\n                }}\n              ></div>\n              <p className=\"-rotate-90 text-sm text-gray-400 sm:rotate-0\">\n                {month.month}\n              </p>\n            </div>\n          ))}\n        </div>\n        <div className=\"flex items-center pb-2 pt-6\">\n          <CalendarIcon className=\"h-5 w-5 text-gray-500\" />\n          <h3 className=\"ml-2 text-sm text-gray-500 \">Last 12 months</h3>\n        </div>\n      </div>\n    </div>\n  );\n}\n"
        }
    ]
}